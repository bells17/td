"use strict";

const tdf = require("./index");
const co = require("co");

const program = require("commander");
program.option("-d --delimiter [delimiter]", "delimiter", String).option("-f --format [stdin format]", "stdin format", String).option("-q --quote [csv quote string]", "csv quote string", String).option("-o --output [output format]", "output data format", String).parse(process.argv);

program.on("--help", function () {
  console.log("  Examples:");
  console.log("");
  console.log("    $ tdf sample.csv");
  console.log("    $ cat sample.csv | tdf -f csv");
  console.log("");
});

if (process.stdin.isTTY) {
  if (!program.args[0]) {
    program.help();
  }
  co(function* () {
    const transformed = yield tdf(program.args[0], program, true);
    console.log(transformed);
  });
} else {
  if (!program.format) {
    program.help();
  }
  let input = "";
  process.stdin.resume();
  process.stdin.setEncoding("utf8");
  process.stdin.on("data", chunk => {
    input += chunk;
  }).on("end", () => {
    co(function* () {
      const transformed = yield tdf(input, program);
      console.log(transformed);
    });
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90ZGYuanMiXSwibmFtZXMiOlsidGRmIiwicmVxdWlyZSIsImNvIiwicHJvZ3JhbSIsIm9wdGlvbiIsIlN0cmluZyIsInBhcnNlIiwicHJvY2VzcyIsImFyZ3YiLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJzdGRpbiIsImlzVFRZIiwiYXJncyIsImhlbHAiLCJ0cmFuc2Zvcm1lZCIsImZvcm1hdCIsImlucHV0IiwicmVzdW1lIiwic2V0RW5jb2RpbmciLCJjaHVuayJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTUEsTUFBTUMsUUFBUSxTQUFSLENBQVo7QUFDQSxNQUFNQyxLQUFLRCxRQUFRLElBQVIsQ0FBWDs7QUFFQSxNQUFNRSxVQUFVRixRQUFRLFdBQVIsQ0FBaEI7QUFDQUUsUUFDR0MsTUFESCxDQUNVLDRCQURWLEVBQ3dDLFdBRHhDLEVBQ3FEQyxNQURyRCxFQUVHRCxNQUZILENBRVUsNEJBRlYsRUFFd0MsY0FGeEMsRUFFd0RDLE1BRnhELEVBR0dELE1BSEgsQ0FHVSwrQkFIVixFQUcyQyxrQkFIM0MsRUFHK0RDLE1BSC9ELEVBSUdELE1BSkgsQ0FJVSw2QkFKVixFQUl5QyxvQkFKekMsRUFJK0RDLE1BSi9ELEVBS0dDLEtBTEgsQ0FLU0MsUUFBUUMsSUFMakI7O0FBT0FMLFFBQVFNLEVBQVIsQ0FBVyxRQUFYLEVBQXFCLFlBQVU7QUFDN0JDLFVBQVFDLEdBQVIsQ0FBWSxhQUFaO0FBQ0FELFVBQVFDLEdBQVIsQ0FBWSxFQUFaO0FBQ0FELFVBQVFDLEdBQVIsQ0FBWSxzQkFBWjtBQUNBRCxVQUFRQyxHQUFSLENBQVksbUNBQVo7QUFDQUQsVUFBUUMsR0FBUixDQUFZLEVBQVo7QUFDRCxDQU5EOztBQVFBLElBQUlKLFFBQVFLLEtBQVIsQ0FBY0MsS0FBbEIsRUFBeUI7QUFDdkIsTUFBSSxDQUFDVixRQUFRVyxJQUFSLENBQWEsQ0FBYixDQUFMLEVBQXNCO0FBQ3BCWCxZQUFRWSxJQUFSO0FBQ0Q7QUFDRGIsS0FBRyxhQUFZO0FBQ2IsVUFBTWMsY0FBYyxNQUFNaEIsSUFBSUcsUUFBUVcsSUFBUixDQUFhLENBQWIsQ0FBSixFQUFxQlgsT0FBckIsRUFBOEIsSUFBOUIsQ0FBMUI7QUFDQU8sWUFBUUMsR0FBUixDQUFZSyxXQUFaO0FBQ0QsR0FIRDtBQUlELENBUkQsTUFRTztBQUNMLE1BQUksQ0FBQ2IsUUFBUWMsTUFBYixFQUFxQjtBQUNuQmQsWUFBUVksSUFBUjtBQUNEO0FBQ0QsTUFBSUcsUUFBUSxFQUFaO0FBQ0FYLFVBQVFLLEtBQVIsQ0FBY08sTUFBZDtBQUNBWixVQUFRSyxLQUFSLENBQWNRLFdBQWQsQ0FBMEIsTUFBMUI7QUFDQWIsVUFBUUssS0FBUixDQUNHSCxFQURILENBQ00sTUFETixFQUNlWSxLQUFELElBQVc7QUFDckJILGFBQVNHLEtBQVQ7QUFDRCxHQUhILEVBSUdaLEVBSkgsQ0FJTSxLQUpOLEVBSWEsTUFBTTtBQUNmUCxPQUFHLGFBQVk7QUFDYixZQUFNYyxjQUFjLE1BQU1oQixJQUFJa0IsS0FBSixFQUFXZixPQUFYLENBQTFCO0FBQ0FPLGNBQVFDLEdBQVIsQ0FBWUssV0FBWjtBQUNELEtBSEQ7QUFJRCxHQVRIO0FBVUQiLCJmaWxlIjoidGRmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHRkZiA9IHJlcXVpcmUoXCIuL2luZGV4XCIpXG5jb25zdCBjbyA9IHJlcXVpcmUoXCJjb1wiKTtcblxuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoXCJjb21tYW5kZXJcIik7XG5wcm9ncmFtXG4gIC5vcHRpb24oXCItZCAtLWRlbGltaXRlciBbZGVsaW1pdGVyXVwiLCBcImRlbGltaXRlclwiLCBTdHJpbmcpXG4gIC5vcHRpb24oXCItZiAtLWZvcm1hdCBbc3RkaW4gZm9ybWF0XVwiLCBcInN0ZGluIGZvcm1hdFwiLCBTdHJpbmcpXG4gIC5vcHRpb24oXCItcSAtLXF1b3RlIFtjc3YgcXVvdGUgc3RyaW5nXVwiLCBcImNzdiBxdW90ZSBzdHJpbmdcIiwgU3RyaW5nKVxuICAub3B0aW9uKFwiLW8gLS1vdXRwdXQgW291dHB1dCBmb3JtYXRdXCIsIFwib3V0cHV0IGRhdGEgZm9ybWF0XCIsIFN0cmluZylcbiAgLnBhcnNlKHByb2Nlc3MuYXJndik7XG5cbnByb2dyYW0ub24oXCItLWhlbHBcIiwgZnVuY3Rpb24oKXtcbiAgY29uc29sZS5sb2coXCIgIEV4YW1wbGVzOlwiKTtcbiAgY29uc29sZS5sb2coXCJcIik7XG4gIGNvbnNvbGUubG9nKFwiICAgICQgdGRmIHNhbXBsZS5jc3ZcIik7XG4gIGNvbnNvbGUubG9nKFwiICAgICQgY2F0IHNhbXBsZS5jc3YgfCB0ZGYgLWYgY3N2XCIpO1xuICBjb25zb2xlLmxvZyhcIlwiKTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5zdGRpbi5pc1RUWSkge1xuICBpZiAoIXByb2dyYW0uYXJnc1swXSkge1xuICAgIHByb2dyYW0uaGVscCgpO1xuICB9XG4gIGNvKGZ1bmN0aW9uKigpIHtcbiAgICBjb25zdCB0cmFuc2Zvcm1lZCA9IHlpZWxkIHRkZihwcm9ncmFtLmFyZ3NbMF0sIHByb2dyYW0sIHRydWUpO1xuICAgIGNvbnNvbGUubG9nKHRyYW5zZm9ybWVkKTtcbiAgfSk7XG59IGVsc2Uge1xuICBpZiAoIXByb2dyYW0uZm9ybWF0KSB7XG4gICAgcHJvZ3JhbS5oZWxwKCk7XG4gIH1cbiAgbGV0IGlucHV0ID0gXCJcIjtcbiAgcHJvY2Vzcy5zdGRpbi5yZXN1bWUoKTtcbiAgcHJvY2Vzcy5zdGRpbi5zZXRFbmNvZGluZyhcInV0ZjhcIik7XG4gIHByb2Nlc3Muc3RkaW5cbiAgICAub24oXCJkYXRhXCIsIChjaHVuaykgPT4ge1xuICAgICAgaW5wdXQgKz0gY2h1bms7XG4gICAgfSlcbiAgICAub24oXCJlbmRcIiwgKCkgPT4ge1xuICAgICAgY28oZnVuY3Rpb24qKCkge1xuICAgICAgICBjb25zdCB0cmFuc2Zvcm1lZCA9IHlpZWxkIHRkZihpbnB1dCwgcHJvZ3JhbSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHRyYW5zZm9ybWVkKTtcbiAgICAgIH0pO1xuICAgIH0pO1xufVxuIl19